Ashna created a physics system with 2 balls bouncing based on gravity and wind(air resistance). A ball class was used and these two forces were applied. When the user clicks on canvas, the wind force is applied. I attempted to bring the science of applying mass to the ball as intended in the progress report; however, I was not able to accomplish this due to time. 

Michael created a firework using a particle based system with gravity and velocity included. When the “1” key is selected, the firework shoots into the sky and when it reaches the top of its climb it shoots particles in four directions. The firework is a different color each time the program is run. It consists of a particle class with the functions, setOff, explode and two different functions for applying gravity. The addGravity1 function decreases the velocity and the addGravity function decreases the height of the firework.

Ahmet implemented the classes SwingSet and Swing. The Swing class takes parameters PVector origin (top of the rope), floats theta, len (length of rope), and damp (dampening factor), and color c. It has another PVector victor, which is the position of the hinge on the swing that the rope attaches to. This is determined with the x value being len * sin(theta) + origin.x and the y value being len * cos(theta) + origin.y. The display() method draws the rope of the swing, draws the victor as a circle with radius 10, and draws a chair from a quad and a rectangle relative to (and behind) the victor position. If the victor is selected (boolean dragging), it is black. Otherwise, it is gray. The user can swing the swing with selecting the seat. When it lets go the rope stops with the damping factor.

Ian created a flocking system based on a cellular automata system. It can be interacted with by adding new boids to the system at the mouse location with a mouse click. The rules of their behavior revolve around 3 rules that will be implemented in the class files. These rules include rules of cohesion, separation, and alignment. This involves locating each boid and then determining the interaction of each with others surrounding it to create the overall system.
